name: Go

on:
  push:
    branches: [ master, testGHA ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

  build:
    name: Publish
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install Goreleaser
      run: |
        curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
        export PATH="./bin:$PATH"
        goreleaser -v

    - name: Prepare GPG key
      run: |
        touch ~/secret.gpg && echo "${{ secrets.GPG_SECRET }}" > ~/secret.gpg
        touch ~/.gnupg/gpg-agent.conf && echo -e "default-cache-ttl 7200\nmax-cache-ttl 31536000\nallow-preset-passphrase" ~/.gnupg/gpg-agent.conf
        gpg --batch --import ~/secret.gpg

    - name: Cache GPG passphrase
      run: |
        gpg --pinentry-mode=loopback --passphrase ${{ secrets.GPG_PASSPHRASE }} --armor --detach-sign --local-user "${{ secrets.GPG_EMAIL }}" README.md
        rm -f README.md.asc
    
    - name: Build executable files
      env:
        GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
      run: |
        goreleaser release --rm-dist